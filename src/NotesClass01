****************Git Class 03****************
Git:
Git is a version control system, that helps us to keep track and backup our project.

/Users/viktoria/IdeaProjects/GitProject1
GitHub:
GitHub is a remote location where we can have our backed up codes safe for future references.
WE can work in collaboration on the same project.

What is a local Repo:
Repo is a storage area, and by local means it is on our system

what is a remote Repo:
a storage area, and remote means it is on the internet.

Tracking our first project using GIT:
1. Create a new project in intellij and in order to start tracking it follow the following steps:

1. Find the location of your project.(in intellij the path is written in front of project name,
you can also right click on project name and the click on open in explorer)
2. Decide the location where you want to create your project.(please don't create a repo within a repo!!!)
3. Navigate your terminal to the location of your project.

initializing the repo:
1. git init

*****3-stage architecture:
Working directory: all the files that you have in your project
Staging area: An area between repo and working directory, here the snapshot of all the files are moved before actually
moving them to repo.

Repo: Our actual storage area.

2. git status:
tells the status of repo,
.untracked files
.files that are in staging area but not in repo yet!
.it doesn't tell us about files in staging area which are also in repo!
.untracked appears in RED
.tracked --> the one in staging area appears in Green color

3. git add .
adds everything to the staging area

4. git commit -m "commit message"
send everything in the staging area to the repo


GitHup:
for each local repo your must have a unique individual remote repo.

1. Create a new Remote repo.
2. On your terminal: git remote -v to check for any connections (if empty shows no connection yet)
3. git remote add originURL
4. git branch -M main (naming your branch)

you need to do all these steps Only once after creation of a new repo.
after that you don't need them unless you want to change your connection.

5. git push -u origin main --> use it first time only
6. after you can do git push only

-----not follow me------
git remote remove origin
to remove the connection of local with remote

use git add filename to add just your desired file in staging area

git log --> shows you all the commits in your local repo
Head --> points to the latest commit that is present in your working directory.
origin.main --? points to the commit in your local repo util which your remote repo is synchronised

Extra git commands:
1. git ls-files:
show you files that are present in the staging area.

*you can not overwrite a file in staging area. git is going to tell that hey you already have some changes
in your staging area that needs to be in the repo.

2. git rm --cached filename:
removes the files from the staging area.









Использование «мастер» в качестве имени для начальной ветки. Это имя ветки по умолчанию
подсказка: возможны изменения. Чтобы настроить имя начальной ветки для использования во всех
подсказка: ваших новых репозиториев, которые будут подавлять это предупреждение, вызовите:
намекать:
подсказка: git config --global init.defaultBranch <имя>
намекать:
подсказка: вместо «мастер» обычно выбираются имена «основной», «магистраль» и
подсказка: «развитие». Только что созданную ветку можно переименовать с помощью этой команды:
намекать:
подсказка: git branch -m <имя>
